{"version":3,"sources":["images/logo.png","PotionForm.js","Potion.js","editPotion.js","AllPotionts.js","App.js","reducers/potionReducer.js","index.js"],"names":["module","exports","PotionForm","handleSubmit","e","preventDefault","title","getTitle","value","description","getDescription","data","id","Date","editing","props","dispatch","type","className","onSubmit","this","required","ref","input","placeholder","rows","cols","Component","connect","Potion","potion","onClick","EditPotion","handleEdit","newTitle","newDescription","key","defaultValue","AllPotionts","potions","map","state","App","src","Logo","potionReducer","action","concat","filter","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.03e6824d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5c43bc59.png\";","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass PotionForm extends Component {\n    \n    handleSubmit = (e) =>{\n        e.preventDefault();\n        const title = this.getTitle.value;\n        const description = this.getDescription.value;\n\n        const data = {\n            id: new Date(),\n            title,\n            description,\n            editing: false\n        }\n\n        this.props.dispatch({\n            type: 'ADD_POTION',\n            data\n        })\n        this.getTitle.value = '';\n        this.getDescription.value = '';\n    }\n\n    render() { \n        return (\n            <div className=\"potion-container\">\n                <h5 className=\"all-potion-heading\">Unesite Vaš napitak u listu napitaka</h5>\n                <form className=\"form\" onSubmit={this.handleSubmit}>\n                    <input required type=\"text\" ref={(input)=>this.getTitle = input}\n                        placeholder=\"Unesite ime napitka\"\n                    />\n                    <br/><br/>\n                    <textarea required rows=\"5\" cols=\"28\" ref={(input)=>this.getDescription = input} \n                        placeholder=\"Unesite opis, dejstvo napitka\"\n                    />\n                    <br/><br/>\n                    <button>Dodaj</button>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default connect()(PotionForm);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass Potion extends Component {\n    \n    render() { \n        return (\n            <div className=\"potion\">\n                <h2 className=\"potion-title\">{this.props.potion.title}</h2>\n                <p className=\"potion-description\">{this.props.potion.description}</p>\n                <div className=\"control-buttons\">\n                    <button className=\"edit\"\n                        onClick={() => this.props.dispatch({type: 'EDIT_POTION', id: this.props.potion.id})}>\n                        Uredi\n                    </button>\n                    <button className=\"delete\"\n                        onClick={() => this.props.dispatch({type: 'DELETE_POTION', id: this.props.potion.id})}>\n                            Izbriši\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n \nexport default connect()(Potion);","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\n\nclass EditPotion extends Component {\n\n    handleEdit = (e) =>{\n        e.preventDefault();\n\n        const newTitle = this.getTitle.value;\n        const newDescription = this.getDescription.value;\n\n        const data = {\n            newTitle,\n            newDescription\n        }\n        \n        this.props.dispatch({type: 'UPDATE', id: this.props.potion.id, data: data})\n    }\n\n    render() { \n        return (\n            <div key={this.props.potion.id} className=\"potion\">\n                <form className=\"form form2\" onSubmit={this.handleEdit}>\n                    <input required type=\"text\" ref={(input) => this.getTitle = input} \n                        defaultValue={this.props.potion.title} placeholder=\"Unesite naslov napitka\"/>\n                    <br/><br/>\n                    <textarea required rows=\"5\" ref={(input) => this.getDescription = input}\n                        defaultValue={this.props.potion.description} cols=\"28\" placeholder=\"Unesite detalje, opis napitka\"/>\n                    <br/><br/>\n                    <button>Uredi</button>\n                </form>\n            </div>\n        );\n    }\n}\n \nexport default connect()(EditPotion);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Potion from './Potion';\nimport EditPotion from './editPotion';\n\nclass AllPotionts extends Component {\n    \n    render() { \n        return (\n            <div className=\"potion-container\">\n                <h5 className=\"all-potion-heading\">Svi napitci</h5>\n                {/* {\n                    this.props.potions.map((potion) => <Potion key={potion.id} potion={potion} />)\n                } */}\n                {   this.props.potions.map((potion) => (\n                    <div key={potion.id}>\n                        {   potion.editing ? <EditPotion potion={potion} key={potion.id} />:\n                            <Potion key={potion.id} potion={potion}/>\n                        }\n                    </div>\n                ))\n\n                }\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) =>{\n    return{\n        potions: state\n    }\n}\n \nexport default connect(mapStateToProps)(AllPotionts);","import React, { Component } from 'react';\nimport PotionForm from './PotionForm';\nimport AllPotionts from './AllPotionts';\n\nimport Logo from './images/logo.png'\n\nclass App extends Component {\n  \n  render() { \n    return (\n      <div className=\"App\">\n        <div className=\"navbar\">\n            <img src={Logo} className=\"center\"/>\n        </div>\n        <PotionForm/>\n        <AllPotionts/>\n      </div>\n    );\n  }\n}\n \nexport default App;","const potionReducer = (state = [], action) => {\n    switch(action.type){\n        case 'ADD_POTION':\n            return state.concat([action.data])\n        break;\n        case 'DELETE_POTION':\n            return state.filter((potion) => potion.id !== action.id)\n        break;\n        case 'EDIT_POTION':\n            return state.map((potion) => potion.id === action.id ? {...potion, editing: !potion.editing}:potion)\n        break;\n        case 'UPDATE':\n            return state.map((potion) => {\n                if(potion.id === action.id){\n                    return{\n                        ...potion,\n                        title: action.data.newTitle,\n                        description: action.data.newDescription,\n                        editing: !potion.editing\n                    }\n                }else return potion;\n            })\n        break;\n        default:\n            return state;\n    }\n}\n\nexport default potionReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\n\nimport potionReducer from './reducers/potionReducer';\nconst store = createStore(potionReducer);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>\n,document.getElementById('root'));"],"sourceRoot":""}